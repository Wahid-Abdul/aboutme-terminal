{"version":3,"sources":["utils/constants.js","assets/data/root.js","components/TerminalBody/TerminalBody.js","utils/dragEnabler.js","components/TerminalTitle/TerminalTitle.js","components/Terminal.js","App.js","reportWebVitals.js","index.js"],"names":["KEY_CODES","COMMANDS","root","directory","children","path","subpath","TerminalBody","useState","fullCommand","setFullCommand","currentPath","history","setHistory","setList","useEffect","focusInput","inputRef","React","useRef","current","focus","executeCommand","split","command","argument","options","console","log","recordHistory","displayList","map","item","listCMD","currentDetails","finalHistory","renderHistory","Array","isArray","className","onClick","id","value","type","e","target","keyCode","preventDefault","element","terminalBody","document","getElementById","scrollTo","top","scrollHeight","left","behavior","dragElement","elm","elmContainer","pos1","pos2","pos3","pos4","dragMouseMove","window","event","clientX","clientY","style","offsetTop","offsetLeft","dragMouseUp","onmouseup","onmousemove","onmousedown","TerminalTitle","header","terminal","Terminal","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4caf268e.chunk.js","sourcesContent":["const KEY_CODES = {\n    TAB: 9,\n    ENTER: 13,\n}\n\nconst COMMANDS = {\n    CLEAR: \"clear\",\n    CD: \"cd\",\n    LIST: \"ls\",\n}\n\nexport {\n    KEY_CODES,\n    COMMANDS\n}","const root = {\n    \"/\": {\n        directory: true,\n        children: [\n            {\n                path: \"/hobbies/\",\n                subpath: \"hobbies/\",\n                directory: true,\n                children:[\n                    {\n                        path: \"/hobbies/reading\",\n                        subpath: \"reading\",\n                        directory: false\n                    },\n                    {\n                        path: \"/hobbies/gaming\",\n                        subpath: \"gaming\",\n                        directory: false\n                    }\n                ]                \n            },\n            {\n                path: \"/languages/\",\n                subpath: \"languages/\",\n                directory: true,\n                children:[\n                    {\n                        path: \"/languages/c\",\n                        subpath: \"c\",\n                        directory: false\n                    },\n                    {\n                        path: \"/languages/javascript\",\n                        subpath: \"javascript\",\n                        directory: false\n                    },\n                    {\n                        path: \"/languages/python\",\n                        subpath: \"python\",\n                        directory: false\n                    }\n                ]                \n            }\n        ]\n    }\n}\n\nexport default root;","import React, { useEffect, useState } from \"react\";\nimport { COMMANDS, KEY_CODES } from \"../../utils/constants\";\nimport \"./TerminalBody.css\"\nimport root from \"../../assets/data/root\"\n\nconst TerminalBody = () => {\n\n    const [fullCommand, setFullCommand] = useState(\"\")\n    const [currentPath, setCurrentPath] = useState(\"/\")\n    const [history, setHistory] = useState([])\n    const [list, setList] = useState([])\n    useEffect(() => {\n        focusInput();\n    }, [])\n\n    const inputRef = React.useRef();\n\n    const scrollToBottom = (element) => {\n\n        element.scrollTo({\n            top: element.scrollHeight,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    const onClickBody = () => {\n        focusInput();\n    }\n\n    const focusInput = () => {\n        inputRef.current.focus()\n    }\n\n    const listCMD = () => {\n        const children = root[currentPath].children;\n        const displayList = children.map( (item) => {\n            return item.subpath\n        })\n        console.log(children, displayList)\n        recordHistory(displayList)\n        return displayList;\n    }\n\n    const executeCommand = () => {\n        const [command, argument, options] = fullCommand.split(\" \")\n        console.log(command, argument, options)\n        switch (command) {\n            case COMMANDS.CLEAR:\n                setHistory([]);\n                break;\n            case COMMANDS.LIST:\n                recordHistory()\n                setList(listCMD());\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    const recordHistory = (displayList = null) => {\n\n        const currentDetails = {\n            path: currentPath,\n            command: fullCommand,\n        }\n        let finalHistory = [...history, currentDetails]\n        if (displayList) {\n            finalHistory = [...finalHistory, displayList]\n        }\n        setHistory(finalHistory)\n        setFullCommand(\"\")\n    }\n\n    const onChangeText = (e) => {\n\n        const keyCode = e.keyCode\n        switch (keyCode) {\n            case KEY_CODES.TAB:\n                e.preventDefault();\n                break;\n\n            case KEY_CODES.ENTER:\n                e.preventDefault();\n                recordHistory()\n                executeCommand();\n                break;\n\n            default:\n                break;\n        }\n        const terminalBody = document.getElementById(\"terminalBody\")\n        scrollToBottom(terminalBody)\n    }\n\n    const renderHistory = history.map((item) => {\n        return Array.isArray(item) ?\n            <>{item}<br /></>\n            :\n            <>{`${item.path}$\\u00A0${item.command}`}<br /></>\n    })\n\n    return (\n        <div className=\"terminalBody\" onClick={onClickBody} id=\"terminalBody\">\n            <div className=\"textContainer\">\n                {renderHistory}\n                {currentPath}$&nbsp;{fullCommand}\n                <input className=\"commandInput\"\n                    value={fullCommand}\n                    type=\"hidden\"\n                    type=\"text\"\n                    onChange={(e) => setFullCommand(e.target.value)}\n                    ref={inputRef} onKeyDown={onChangeText}\n                />\n            </div>\n        </div>\n    )\n}\nexport default TerminalBody;","\nconst dragElement = (elm, elmContainer) => {\n    var pos1, pos2, pos3, pos4;\n    elm.onmousedown = dragMouseDown;\n  \n    function dragMouseDown(e) {\n      e = e || window.event;\n      e.preventDefault();\n      //get x , y when i click the mouse\n      pos3 = e.clientX;\n      pos4 = e.clientY;\n      document.onmousemove = dragMouseMove;\n      document.onmouseup = dragMouseUp;\n    }\n  \n    function dragMouseMove(e) {\n      e = e || window.event;\n      e.preventDefault();\n      //get x , y when i move the mouse\n      pos1 = pos3 - e.clientX;\n      pos2 = pos4 - e.clientY;\n      //update\n      pos3 = e.clientX;\n      pos4 = e.clientY;\n      elmContainer.style.top = elmContainer.offsetTop - pos2 + \"px\";\n      elmContainer.style.left = elmContainer.offsetLeft - pos1 + \"px\";\n    }\n  \n    function dragMouseUp() {\n      document.onmouseup = null;\n      document.onmousemove = null;\n    }\n  }\n  \n  export default dragElement;\n","import { useEffect } from 'react';\nimport dragElement from '../../utils/dragEnabler';\nimport './TerminalTitle.css';\n\nconst TerminalTitle = () => {\n    useEffect(() => {\n        const header = document.getElementById('dragTerminalTitle')\n        const terminal = document.getElementById('dragTerminal')\n        dragElement(header, terminal)\n    })\n    return (\n        <div className=\"header\" id=\"dragTerminalTitle\">\n            <div className=\"actionButtons\">\n                <span className=\"actionButton\">x</span>\n                <span className=\"actionButton\">i</span>\n                <span className=\"actionButton\">o</span>\n            </div>\n            <div className=\"titleContainer\">\n                Terminal\n            </div>\n\n        </div>\n    )\n}\n\nexport default TerminalTitle;                                                              ","\nimport './Terminal.css'\nimport TerminalBody from \"./TerminalBody/TerminalBody\";\nimport TerminalTitle from \"./TerminalTitle/TerminalTitle\";\n\nconst Terminal = () => {\n\n    return (\n        <div className=\"terminal\" id=\"dragTerminal\">\n            <TerminalTitle />\n            <TerminalBody />\n        </div>\n    )\n}\nexport default Terminal;","import './App.css';\nimport Terminal from './components/Terminal';\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <Terminal />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}