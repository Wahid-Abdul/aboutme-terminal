{"version":3,"sources":["utils/constants.js","assets/data/root.js","utils/Utils.js","components/TerminalBody/TerminalBody.js","utils/dragEnabler.js","components/TerminalTitle/TerminalTitle.js","components/Terminal.js","App.js","reportWebVitals.js","index.js"],"names":["KEY_CODES","COMMANDS","root","path","directory","children","subpath","areEqualStrings","string1","string2","replace","TerminalBody","useState","fullCommand","setFullCommand","currentPath","setCurrentPath","history","setHistory","setList","useEffect","focusInput","inputRef","React","useRef","current","focus","listCMD","pathList","split","map","item","tempPath","tempChildren","tempRoot","child","console","log","displayList","recordHistory","changeDirectory","endpath","desiredPath","lastSlash","slice","length","lastIndexOf","currentDetails","command","finalHistory","renderHistory","Array","isArray","className","onClick","id","value","type","e","target","keyCode","preventDefault","argument","options","executeCommand","element","terminalBody","document","getElementById","scrollTo","top","scrollHeight","left","behavior","dragElement","elm","elmContainer","pos1","pos2","pos3","pos4","dragMouseMove","window","event","clientX","clientY","style","offsetTop","offsetLeft","dragMouseUp","onmouseup","onmousemove","onmousedown","TerminalTitle","header","terminal","Terminal","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.095e1d3c.chunk.js","sourcesContent":["const KEY_CODES = {\n    TAB: 9,\n    ENTER: 13,\n}\n\nconst COMMANDS = {\n    CLEAR: \"clear\",\n    CD: \"cd\",\n    LIST: \"ls\",\n}\n\nexport {\n    KEY_CODES,\n    COMMANDS\n}","const root = {\n        path: \"/\",\n        directory: true,\n        children: [\n            {\n                path: \"/hobbies/\",\n                subpath: \"hobbies/\",\n                directory: true,\n                children:[\n                    {\n                        path: \"/hobbies/reading/\",\n                        subpath: \"reading/\",\n                        directory: true,\n                        children:[\n                            {\n                                path: \"/hobbies/reading/novels\",\n                                subpath: \"novels\",\n                                directory: true\n                            },\n                            {\n                                path: \"/hobbies/reading/books\",\n                                subpath: \"books\",\n                                directory: false\n                            }\n                        ]       \n                    },\n                    {\n                        path: \"/hobbies/gaming/\",\n                        subpath: \"gaming/\",\n                        directory: false\n                    }\n                ]                \n            },\n            {\n                path: \"/languages/\",\n                subpath: \"languages/\",\n                directory: true,\n                children:[\n                    {\n                        path: \"/languages/c\",\n                        subpath: \"c\",\n                        directory: false\n                    },\n                    {\n                        path: \"/languages/javascript\",\n                        subpath: \"javascript\",\n                        directory: false\n                    },\n                    {\n                        path: \"/languages/python\",\n                        subpath: \"python\",\n                        directory: false\n                    }\n                ]                \n            }\n        ]\n    }\n\nexport default root;","const areEqualStrings = (string1, string2) => {\n    return string1.replace(/\\s/g, \"\") === string2.replace(/\\s/g, \"\")\n}\n\nexport {\n    areEqualStrings\n}","import React, { useEffect, useState } from \"react\";\nimport { COMMANDS, KEY_CODES } from \"../../utils/constants\";\nimport \"./TerminalBody.css\"\nimport root from \"../../assets/data/root\"\nimport { areEqualStrings } from \"../../utils/Utils\";\n\nconst TerminalBody = () => {\n\n    const [fullCommand, setFullCommand] = useState(\"\")\n    const [currentPath, setCurrentPath] = useState(\"/\")\n    const [history, setHistory] = useState([])\n    const [list, setList] = useState([])\n    useEffect(() => {\n        focusInput();\n    }, [])\n\n    const inputRef = React.useRef();\n\n    const scrollToBottom = (element) => {\n\n        element.scrollTo({\n            top: element.scrollHeight,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    const onClickBody = () => {\n        focusInput();\n    }\n\n    const focusInput = () => {\n        inputRef.current.focus()\n    }\n\n    const listCMD = (path = currentPath) => {\n\n        let pathList = path.split(\"/\")\n        pathList = pathList.map( item => item + \"/\")\n\n        let tempPath = \"\"\n        let tempChildren = []\n        let tempRoot = { ...root}\n        pathList.map(item => {\n\n            tempPath += item\n\n            tempChildren && tempChildren.map(child => {\n                if (areEqualStrings(child.path, tempPath)) {\n                    console.log(\"CCCCCCC\", item, child)\n                    tempRoot = child\n                }\n            })\n            if (item === tempRoot.path || \n                item === tempRoot.subpath || \n                \"/\" + item === tempRoot.path\n                ) {\n                tempChildren = [ ...tempRoot.children]\n            }\n\n        })\n\n        const displayList = tempChildren.map( (item) => {\n            return item.subpath\n        })\n        recordHistory(displayList)\n        return displayList;\n    }\n\n    const executeCommand = () => {\n        const [command, argument, options] = fullCommand.split(\" \")\n        console.log(command, argument, options)\n        switch (command) {\n            case COMMANDS.CLEAR:\n                setHistory([]);\n                break;\n            case COMMANDS.LIST:\n                recordHistory()\n                setList(listCMD());\n                break;\n            case COMMANDS.CD:\n                changeDirectory(argument)\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    const changeDirectory = (endpath) => {\n\n        let desiredPath;\n\n        if (endpath === \"..\") {\n            if (currentPath === \"\" || currentPath === \"/\") {\n                desiredPath = \"/\";\n            }\n            else {\n                desiredPath = currentPath.slice(0, currentPath.length - 1);\n                let lastSlash = desiredPath.lastIndexOf(\"/\")\n                desiredPath = desiredPath.slice(0, lastSlash + 1);\n            }\n        } else {\n            desiredPath = currentPath + endpath + '/'\n        }\n        setCurrentPath(desiredPath)\n        const listing = listCMD(desiredPath);\n\n    }\n\n    const recordHistory = (displayList = null) => {\n\n        const currentDetails = {\n            path: currentPath,\n            command: fullCommand,\n        }\n        let finalHistory = [...history, currentDetails]\n        if (displayList) {\n            finalHistory = [...finalHistory, displayList]\n        }\n        setHistory(finalHistory)\n        setFullCommand(\"\")\n    }\n\n    const onChangeText = (e) => {\n\n        const keyCode = e.keyCode\n        switch (keyCode) {\n            case KEY_CODES.TAB:\n                e.preventDefault();\n                break;\n\n            case KEY_CODES.ENTER:\n                e.preventDefault();\n                recordHistory()\n                executeCommand();\n                break;\n\n            default:\n                break;\n        }\n        const terminalBody = document.getElementById(\"terminalBody\")\n        scrollToBottom(terminalBody)\n    }\n\n    const renderHistory = history.map((item) => {\n        return Array.isArray(item) ?\n            <>{item}<br /></>\n            :\n            <>{`${item.path}$\\u00A0${item.command}`}<br /></>\n    })\n\n    return (\n        <div className=\"terminalBody\" onClick={onClickBody} id=\"terminalBody\">\n            <div className=\"textContainer\">\n                {renderHistory}\n                {currentPath}$&nbsp;{fullCommand}\n                <input className=\"commandInput\"\n                    value={fullCommand}\n                    type=\"hidden\"\n                    type=\"text\"\n                    onChange={(e) => setFullCommand(e.target.value)}\n                    ref={inputRef} onKeyDown={onChangeText}\n                />\n            </div>\n        </div>\n    )\n}\nexport default TerminalBody;","\nconst dragElement = (elm, elmContainer) => {\n    var pos1, pos2, pos3, pos4;\n    elm.onmousedown = dragMouseDown;\n  \n    function dragMouseDown(e) {\n      e = e || window.event;\n      e.preventDefault();\n      //get x , y when i click the mouse\n      pos3 = e.clientX;\n      pos4 = e.clientY;\n      document.onmousemove = dragMouseMove;\n      document.onmouseup = dragMouseUp;\n    }\n  \n    function dragMouseMove(e) {\n      e = e || window.event;\n      e.preventDefault();\n      //get x , y when i move the mouse\n      pos1 = pos3 - e.clientX;\n      pos2 = pos4 - e.clientY;\n      //update\n      pos3 = e.clientX;\n      pos4 = e.clientY;\n      elmContainer.style.top = elmContainer.offsetTop - pos2 + \"px\";\n      elmContainer.style.left = elmContainer.offsetLeft - pos1 + \"px\";\n    }\n  \n    function dragMouseUp() {\n      document.onmouseup = null;\n      document.onmousemove = null;\n    }\n  }\n  \n  export default dragElement;\n","import { useEffect } from 'react';\nimport dragElement from '../../utils/dragEnabler';\nimport './TerminalTitle.css';\n\nconst TerminalTitle = () => {\n    useEffect(() => {\n        const header = document.getElementById('dragTerminalTitle')\n        const terminal = document.getElementById('dragTerminal')\n        dragElement(header, terminal)\n    })\n    return (\n        <div className=\"header\" id=\"dragTerminalTitle\">\n            <div className=\"actionButtons\">\n                <span className=\"actionButton\">x</span>\n                <span className=\"actionButton\">i</span>\n                <span className=\"actionButton\">o</span>\n            </div>\n            <div className=\"titleContainer\">\n                Terminal\n            </div>\n\n        </div>\n    )\n}\n\nexport default TerminalTitle;                                                              ","\nimport './Terminal.css'\nimport TerminalBody from \"./TerminalBody/TerminalBody\";\nimport TerminalTitle from \"./TerminalTitle/TerminalTitle\";\n\nconst Terminal = () => {\n\n    return (\n        <div className=\"terminal\" id=\"dragTerminal\">\n            <TerminalTitle />\n            <TerminalBody />\n        </div>\n    )\n}\nexport default Terminal;","import './App.css';\nimport Terminal from './components/Terminal';\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <Terminal />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}